case 2:
#line 97 "perly.y"
    { yyval.ival = yyvsp[-1].ival; newPROG(block_end(yyvsp[-1].ival,yyvsp[0].opval)); ;}
    break;

  case 3:
#line 102 "perly.y"
    { if (PL_copline > (line_t)yyvsp[-3].ival)
			      PL_copline = (line_t)yyvsp[-3].ival;
			  yyval.opval = block_end(yyvsp[-2].ival, yyvsp[-1].opval); ;}
    break;

  case 4:
#line 108 "perly.y"
    { yyval.ival = block_start(TRUE); ;}
    break;

  case 5:
#line 112 "perly.y"
    {
		    PL_expect = XSTATE; yyval.ival = block_start(TRUE);
		;}
    break;

  case 6:
#line 119 "perly.y"
    { if (PL_copline > (line_t)yyvsp[-3].ival)
			      PL_copline = (line_t)yyvsp[-3].ival;
			  yyval.opval = block_end(yyvsp[-2].ival, yyvsp[-1].opval); ;}
    break;

  case 7:
#line 125 "perly.y"
    { yyval.ival = block_start(FALSE); ;}
    break;

  case 8:
#line 129 "perly.y"
    { yyval.ival = PL_savestack_ix; ;}
    break;

  case 9:
#line 133 "perly.y"
    { yyval.opval = Nullop; ;}
    break;

  case 10:
#line 135 "perly.y"
    { yyval.opval = yyvsp[-1].opval; ;}
    break;

  case 11:
#line 137 "perly.y"
    {   LEAVE_SCOPE(yyvsp[-1].ival);
			    yyval.opval = append_list(OP_LINESEQ,
				(LISTOP*)yyvsp[-2].opval, (LISTOP*)yyvsp[0].opval);
			    PL_pad_reset_pending = TRUE;
			    if (yyvsp[-2].opval && yyvsp[0].opval) PL_hints |= HINT_BLOCK_SCOPE; ;}
    break;

  case 12:
#line 146 "perly.y"
    { yyval.opval = newSTATEOP(0, yyvsp[-1].pval, yyvsp[0].opval); ;}
    break;

  case 14:
#line 149 "perly.y"
    { if (yyvsp[-1].pval != Nullch) {
			      yyval.opval = newSTATEOP(0, yyvsp[-1].pval, newOP(OP_NULL, 0));
			    }
			    else {
			      yyval.opval = Nullop;
			      PL_copline = NOLINE;
			    }
			    PL_expect = XSTATE; ;}
    break;

  case 15:
#line 158 "perly.y"
    { yyval.opval = newSTATEOP(0, yyvsp[-2].pval, yyvsp[-1].opval);
			  PL_expect = XSTATE; ;}
    break;

  case 16:
#line 164 "perly.y"
    { yyval.opval = Nullop; ;}
    break;

  case 17:
#line 166 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 18:
#line 168 "perly.y"
    { yyval.opval = newLOGOP(OP_AND, 0, yyvsp[0].opval, yyvsp[-2].opval); ;}
    break;

  case 19:
#line 170 "perly.y"
    { yyval.opval = newLOGOP(OP_OR, 0, yyvsp[0].opval, yyvsp[-2].opval); ;}
    break;

  case 20:
#line 172 "perly.y"
    { yyval.opval = newLOOPOP(OPf_PARENS, 1, scalar(yyvsp[0].opval), yyvsp[-2].opval); ;}
    break;

  case 21:
#line 174 "perly.y"
    { yyval.opval = newLOOPOP(OPf_PARENS, 1, yyvsp[0].opval, yyvsp[-2].opval);;}
    break;

  case 22:
#line 176 "perly.y"
    { yyval.opval = newFOROP(0, Nullch, (line_t)yyvsp[-1].ival,
					Nullop, yyvsp[0].opval, yyvsp[-2].opval, Nullop); ;}
    break;

  case 23:
#line 182 "perly.y"
    { yyval.opval = Nullop; ;}
    break;

  case 24:
#line 184 "perly.y"
    { (yyvsp[0].opval)->op_flags |= OPf_PARENS; yyval.opval = scope(yyvsp[0].opval); ;}
    break;

  case 25:
#line 186 "perly.y"
    { PL_copline = (line_t)yyvsp[-5].ival;
			    yyval.opval = newCONDOP(0, yyvsp[-3].opval, scope(yyvsp[-1].opval), yyvsp[0].opval);
			    PL_hints |= HINT_BLOCK_SCOPE; ;}
    break;

  case 26:
#line 193 "perly.y"
    { PL_copline = (line_t)yyvsp[-6].ival;
			    yyval.opval = block_end(yyvsp[-4].ival,
				   newCONDOP(0, yyvsp[-3].opval, scope(yyvsp[-1].opval), yyvsp[0].opval)); ;}
    break;

  case 27:
#line 197 "perly.y"
    { PL_copline = (line_t)yyvsp[-6].ival;
			    yyval.opval = block_end(yyvsp[-4].ival,
				   newCONDOP(0, yyvsp[-3].opval, scope(yyvsp[-1].opval), yyvsp[0].opval)); ;}
    break;

  case 28:
#line 204 "perly.y"
    { yyval.opval = Nullop; ;}
    break;

  case 29:
#line 206 "perly.y"
    { yyval.opval = scope(yyvsp[0].opval); ;}
    break;

  case 30:
#line 211 "perly.y"
    { PL_copline = (line_t)yyvsp[-6].ival;
			    yyval.opval = block_end(yyvsp[-4].ival,
				   newSTATEOP(0, yyvsp[-7].pval,
				     newWHILEOP(0, 1, (LOOP*)Nullop,
						yyvsp[-6].ival, yyvsp[-3].opval, yyvsp[-1].opval, yyvsp[0].opval))); ;}
    break;

  case 31:
#line 217 "perly.y"
    { PL_copline = (line_t)yyvsp[-6].ival;
			    yyval.opval = block_end(yyvsp[-4].ival,
				   newSTATEOP(0, yyvsp[-7].pval,
				     newWHILEOP(0, 1, (LOOP*)Nullop,
						yyvsp[-6].ival, yyvsp[-3].opval, yyvsp[-1].opval, yyvsp[0].opval))); ;}
    break;

  case 32:
#line 223 "perly.y"
    { yyval.opval = block_end(yyvsp[-6].ival,
				 newFOROP(0, yyvsp[-9].pval, (line_t)yyvsp[-8].ival, yyvsp[-5].opval, yyvsp[-3].opval, yyvsp[-1].opval, yyvsp[0].opval)); ;}
    break;

  case 33:
#line 226 "perly.y"
    { yyval.opval = block_end(yyvsp[-4].ival,
				 newFOROP(0, yyvsp[-8].pval, (line_t)yyvsp[-7].ival, mod(yyvsp[-6].opval, OP_ENTERLOOP),
					  yyvsp[-3].opval, yyvsp[-1].opval, yyvsp[0].opval)); ;}
    break;

  case 34:
#line 230 "perly.y"
    { yyval.opval = block_end(yyvsp[-4].ival,
				 newFOROP(0, yyvsp[-7].pval, (line_t)yyvsp[-6].ival, Nullop, yyvsp[-3].opval, yyvsp[-1].opval, yyvsp[0].opval)); ;}
    break;

  case 35:
#line 234 "perly.y"
    { OP *forop;
			  PL_copline = (line_t)yyvsp[-9].ival;
			  forop = newSTATEOP(0, yyvsp[-10].pval,
					    newWHILEOP(0, 1, (LOOP*)Nullop,
						yyvsp[-9].ival, scalar(yyvsp[-4].opval),
						yyvsp[0].opval, yyvsp[-2].opval));
			  if (yyvsp[-6].opval) {
				forop = append_elem(OP_LINESEQ,
                                        newSTATEOP(0, (yyvsp[-10].pval?savepv(yyvsp[-10].pval):Nullch),
						   yyvsp[-6].opval),
					forop);
			  }

			  yyval.opval = block_end(yyvsp[-7].ival, forop); ;}
    break;

  case 36:
#line 249 "perly.y"
    { yyval.opval = newSTATEOP(0, yyvsp[-2].pval,
				 newWHILEOP(0, 1, (LOOP*)Nullop,
					    NOLINE, Nullop, yyvsp[-1].opval, yyvsp[0].opval)); ;}
    break;

  case 37:
#line 256 "perly.y"
    { yyval.opval = Nullop; ;}
    break;

  case 39:
#line 262 "perly.y"
    { (void)scan_num("1", &yylval); yyval.opval = yylval.opval; ;}
    break;

  case 41:
#line 268 "perly.y"
    { yyval.opval = invert(scalar(yyvsp[0].opval)); ;}
    break;

  case 42:
#line 273 "perly.y"
    { yyval.opval = yyvsp[0].opval; intro_my(); ;}
    break;

  case 43:
#line 277 "perly.y"
    { yyval.opval = yyvsp[0].opval; intro_my(); ;}
    break;

  case 44:
#line 281 "perly.y"
    { yyval.opval = yyvsp[0].opval; intro_my(); ;}
    break;

  case 45:
#line 285 "perly.y"
    { yyval.opval = yyvsp[0].opval; intro_my(); ;}
    break;

  case 46:
#line 290 "perly.y"
    { yyval.pval = Nullch; ;}
    break;

  case 48:
#line 296 "perly.y"
    { yyval.ival = 0; ;}
    break;

  case 49:
#line 298 "perly.y"
    { yyval.ival = 0; ;}
    break;

  case 50:
#line 300 "perly.y"
    { yyval.ival = 0; ;}
    break;

  case 51:
#line 302 "perly.y"
    { yyval.ival = 0; ;}
    break;

  case 52:
#line 304 "perly.y"
    { yyval.ival = 0; ;}
    break;

  case 53:
#line 308 "perly.y"
    { newFORM(yyvsp[-2].ival, yyvsp[-1].opval, yyvsp[0].opval); ;}
    break;

  case 54:
#line 311 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 55:
#line 312 "perly.y"
    { yyval.opval = Nullop; ;}
    break;

  case 56:
#line 317 "perly.y"
    { newMYSUB(yyvsp[-4].ival, yyvsp[-3].opval, yyvsp[-2].opval, yyvsp[-1].opval, yyvsp[0].opval); ;}
    break;

  case 57:
#line 322 "perly.y"
    { newATTRSUB(yyvsp[-4].ival, yyvsp[-3].opval, yyvsp[-2].opval, yyvsp[-1].opval, yyvsp[0].opval); ;}
    break;

  case 58:
#line 326 "perly.y"
    { yyval.ival = start_subparse(FALSE, 0); ;}
    break;

  case 59:
#line 330 "perly.y"
    { yyval.ival = start_subparse(FALSE, CVf_ANON); ;}
    break;

  case 60:
#line 334 "perly.y"
    { yyval.ival = start_subparse(TRUE, 0); ;}
    break;

  case 61:
#line 338 "perly.y"
    { STRLEN n_a; char *name = SvPV(((SVOP*)yyvsp[0].opval)->op_sv,n_a);
			  if (strEQ(name, "BEGIN") || strEQ(name, "END")
			      || strEQ(name, "INIT") || strEQ(name, "CHECK"))
			      CvSPECIAL_on(PL_compcv);
			  yyval.opval = yyvsp[0].opval; ;}
    break;

  case 62:
#line 347 "perly.y"
    { yyval.opval = Nullop; ;}
    break;

  case 64:
#line 353 "perly.y"
    { yyval.opval = Nullop; ;}
    break;

  case 65:
#line 355 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 66:
#line 357 "perly.y"
    { yyval.opval = Nullop; ;}
    break;

  case 67:
#line 362 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 68:
#line 364 "perly.y"
    { yyval.opval = Nullop; ;}
    break;

  case 69:
#line 368 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 70:
#line 369 "perly.y"
    { yyval.opval = Nullop; PL_expect = XSTATE; ;}
    break;

  case 71:
#line 373 "perly.y"
    { package(yyvsp[-1].opval); ;}
    break;

  case 72:
#line 377 "perly.y"
    { CvSPECIAL_on(PL_compcv); /* It's a BEGIN {} */ ;}
    break;

  case 73:
#line 379 "perly.y"
    { utilize(yyvsp[-6].ival, yyvsp[-5].ival, yyvsp[-3].opval, yyvsp[-2].opval, yyvsp[-1].opval); ;}
    break;

  case 74:
#line 384 "perly.y"
    { yyval.opval = newLOGOP(OP_AND, 0, yyvsp[-2].opval, yyvsp[0].opval); ;}
    break;

  case 75:
#line 386 "perly.y"
    { yyval.opval = newLOGOP(yyvsp[-1].ival, 0, yyvsp[-2].opval, yyvsp[0].opval); ;}
    break;

  case 76:
#line 388 "perly.y"
    { yyval.opval = newLOGOP(OP_DOR, 0, yyvsp[-2].opval, yyvsp[0].opval); ;}
    break;

  case 78:
#line 394 "perly.y"
    { yyval.opval = yyvsp[-1].opval; ;}
    break;

  case 79:
#line 396 "perly.y"
    { yyval.opval = append_elem(OP_LIST, yyvsp[-2].opval, yyvsp[0].opval); ;}
    break;

  case 81:
#line 402 "perly.y"
    { yyval.opval = convert(yyvsp[-2].ival, OPf_STACKED,
				prepend_elem(OP_LIST, newGVREF(yyvsp[-2].ival,yyvsp[-1].opval), yyvsp[0].opval) ); ;}
    break;

  case 82:
#line 405 "perly.y"
    { yyval.opval = convert(yyvsp[-4].ival, OPf_STACKED,
				prepend_elem(OP_LIST, newGVREF(yyvsp[-4].ival,yyvsp[-2].opval), yyvsp[-1].opval) ); ;}
    break;

  case 83:
#line 408 "perly.y"
    { yyval.opval = convert(OP_ENTERSUB, OPf_STACKED,
				append_elem(OP_LIST,
				    prepend_elem(OP_LIST, scalar(yyvsp[-5].opval), yyvsp[-1].opval),
				    newUNOP(OP_METHOD, 0, yyvsp[-3].opval))); ;}
    break;

  case 84:
#line 413 "perly.y"
    { yyval.opval = convert(OP_ENTERSUB, OPf_STACKED,
				append_elem(OP_LIST, scalar(yyvsp[-2].opval),
				    newUNOP(OP_METHOD, 0, yyvsp[0].opval))); ;}
    break;

  case 85:
#line 417 "perly.y"
    { yyval.opval = convert(OP_ENTERSUB, OPf_STACKED,
				append_elem(OP_LIST,
				    prepend_elem(OP_LIST, yyvsp[-1].opval, yyvsp[0].opval),
				    newUNOP(OP_METHOD, 0, yyvsp[-2].opval))); ;}
    break;

  case 86:
#line 422 "perly.y"
    { yyval.opval = convert(OP_ENTERSUB, OPf_STACKED,
				append_elem(OP_LIST,
				    prepend_elem(OP_LIST, yyvsp[-3].opval, yyvsp[-1].opval),
				    newUNOP(OP_METHOD, 0, yyvsp[-4].opval))); ;}
    break;

  case 87:
#line 427 "perly.y"
    { yyval.opval = convert(yyvsp[-1].ival, 0, yyvsp[0].opval); ;}
    break;

  case 88:
#line 429 "perly.y"
    { yyval.opval = convert(yyvsp[-3].ival, 0, yyvsp[-1].opval); ;}
    break;

  case 89:
#line 431 "perly.y"
    { yyvsp[0].opval = newANONATTRSUB(yyvsp[-1].ival, 0, Nullop, yyvsp[0].opval); ;}
    break;

  case 90:
#line 433 "perly.y"
    { yyval.opval = newUNOP(OP_ENTERSUB, OPf_STACKED,
				 append_elem(OP_LIST,
				   prepend_elem(OP_LIST, yyvsp[-2].opval, yyvsp[0].opval), yyvsp[-4].opval)); ;}
    break;

  case 93:
#line 447 "perly.y"
    { yyval.opval = newBINOP(OP_GELEM, 0, yyvsp[-4].opval, scalar(yyvsp[-2].opval));
			    PL_expect = XOPERATOR; ;}
    break;

  case 94:
#line 450 "perly.y"
    { yyval.opval = newBINOP(OP_AELEM, 0, oopsAV(yyvsp[-3].opval), scalar(yyvsp[-1].opval)); ;}
    break;

  case 95:
#line 452 "perly.y"
    { yyval.opval = newBINOP(OP_AELEM, 0,
					ref(newAVREF(yyvsp[-4].opval),OP_RV2AV),
					scalar(yyvsp[-1].opval));;}
    break;

  case 96:
#line 456 "perly.y"
    { yyval.opval = newBINOP(OP_AELEM, 0,
					ref(newAVREF(yyvsp[-3].opval),OP_RV2AV),
					scalar(yyvsp[-1].opval));;}
    break;

  case 97:
#line 460 "perly.y"
    { yyval.opval = newBINOP(OP_HELEM, 0, oopsHV(yyvsp[-4].opval), jmaybe(yyvsp[-2].opval));
			    PL_expect = XOPERATOR; ;}
    break;

  case 98:
#line 463 "perly.y"
    { yyval.opval = newBINOP(OP_HELEM, 0,
					ref(newHVREF(yyvsp[-5].opval),OP_RV2HV),
					jmaybe(yyvsp[-2].opval));
			    PL_expect = XOPERATOR; ;}
    break;

  case 99:
#line 468 "perly.y"
    { yyval.opval = newBINOP(OP_HELEM, 0,
					ref(newHVREF(yyvsp[-4].opval),OP_RV2HV),
					jmaybe(yyvsp[-2].opval));
			    PL_expect = XOPERATOR; ;}
    break;

  case 100:
#line 473 "perly.y"
    { yyval.opval = newUNOP(OP_ENTERSUB, OPf_STACKED,
				   newCVREF(0, scalar(yyvsp[-3].opval))); ;}
    break;

  case 101:
#line 476 "perly.y"
    { yyval.opval = newUNOP(OP_ENTERSUB, OPf_STACKED,
				   append_elem(OP_LIST, yyvsp[-1].opval,
				       newCVREF(0, scalar(yyvsp[-4].opval)))); ;}
    break;

  case 102:
#line 481 "perly.y"
    { yyval.opval = newUNOP(OP_ENTERSUB, OPf_STACKED,
				   append_elem(OP_LIST, yyvsp[-1].opval,
					       newCVREF(0, scalar(yyvsp[-3].opval)))); ;}
    break;

  case 103:
#line 485 "perly.y"
    { yyval.opval = newUNOP(OP_ENTERSUB, OPf_STACKED,
				   newCVREF(0, scalar(yyvsp[-2].opval))); ;}
    break;

  case 104:
#line 491 "perly.y"
    { yyval.opval = newASSIGNOP(OPf_STACKED, yyvsp[-2].opval, yyvsp[-1].ival, yyvsp[0].opval); ;}
    break;

  case 105:
#line 493 "perly.y"
    { yyval.opval = newBINOP(yyvsp[-1].ival, 0, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval)); ;}
    break;

  case 106:
#line 495 "perly.y"
    {   if (yyvsp[-1].ival != OP_REPEAT)
				scalar(yyvsp[-2].opval);
			    yyval.opval = newBINOP(yyvsp[-1].ival, 0, yyvsp[-2].opval, scalar(yyvsp[0].opval)); ;}
    break;

  case 107:
#line 499 "perly.y"
    { yyval.opval = newBINOP(yyvsp[-1].ival, 0, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval)); ;}
    break;

  case 108:
#line 501 "perly.y"
    { yyval.opval = newBINOP(yyvsp[-1].ival, 0, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval)); ;}
    break;

  case 109:
#line 503 "perly.y"
    { yyval.opval = newBINOP(yyvsp[-1].ival, 0, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval)); ;}
    break;

  case 110:
#line 505 "perly.y"
    { yyval.opval = newBINOP(yyvsp[-1].ival, 0, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval)); ;}
    break;

  case 111:
#line 507 "perly.y"
    { yyval.opval = newBINOP(yyvsp[-1].ival, 0, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval)); ;}
    break;

  case 112:
#line 509 "perly.y"
    { yyval.opval = newBINOP(yyvsp[-1].ival, 0, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval)); ;}
    break;

  case 113:
#line 511 "perly.y"
    { yyval.opval = newRANGE(yyvsp[-1].ival, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval));;}
    break;

  case 114:
#line 513 "perly.y"
    { yyval.opval = newLOGOP(OP_AND, 0, yyvsp[-2].opval, yyvsp[0].opval); ;}
    break;

  case 115:
#line 515 "perly.y"
    { yyval.opval = newLOGOP(OP_OR, 0, yyvsp[-2].opval, yyvsp[0].opval); ;}
    break;

  case 116:
#line 517 "perly.y"
    { yyval.opval = newLOGOP(OP_DOR, 0, yyvsp[-2].opval, yyvsp[0].opval); ;}
    break;

  case 117:
#line 519 "perly.y"
    { yyval.opval = bind_match(yyvsp[-1].ival, yyvsp[-2].opval, yyvsp[0].opval); ;}
    break;

  case 118:
#line 524 "perly.y"
    { yyval.opval = newUNOP(OP_NEGATE, 0, scalar(yyvsp[0].opval)); ;}
    break;

  case 119:
#line 526 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 120:
#line 528 "perly.y"
    { yyval.opval = newUNOP(OP_NOT, 0, scalar(yyvsp[0].opval)); ;}
    break;

  case 121:
#line 530 "perly.y"
    { yyval.opval = newUNOP(OP_COMPLEMENT, 0, scalar(yyvsp[0].opval));;}
    break;

  case 122:
#line 532 "perly.y"
    { yyval.opval = newUNOP(OP_POSTINC, 0,
					mod(scalar(yyvsp[-1].opval), OP_POSTINC)); ;}
    break;

  case 123:
#line 535 "perly.y"
    { yyval.opval = newUNOP(OP_POSTDEC, 0,
					mod(scalar(yyvsp[-1].opval), OP_POSTDEC)); ;}
    break;

  case 124:
#line 538 "perly.y"
    { yyval.opval = newUNOP(OP_PREINC, 0,
					mod(scalar(yyvsp[0].opval), OP_PREINC)); ;}
    break;

  case 125:
#line 541 "perly.y"
    { yyval.opval = newUNOP(OP_PREDEC, 0,
					mod(scalar(yyvsp[0].opval), OP_PREDEC)); ;}
    break;

  case 126:
#line 548 "perly.y"
    { yyval.opval = newANONLIST(yyvsp[-1].opval); ;}
    break;

  case 127:
#line 550 "perly.y"
    { yyval.opval = newANONLIST(Nullop); ;}
    break;

  case 128:
#line 552 "perly.y"
    { yyval.opval = newANONHASH(yyvsp[-2].opval); ;}
    break;

  case 129:
#line 554 "perly.y"
    { yyval.opval = newANONHASH(Nullop); ;}
    break;

  case 130:
#line 556 "perly.y"
    { yyval.opval = newANONATTRSUB(yyvsp[-3].ival, yyvsp[-2].opval, yyvsp[-1].opval, yyvsp[0].opval); ;}
    break;

  case 131:
#line 562 "perly.y"
    { yyval.opval = dofile(yyvsp[0].opval); ;}
    break;

  case 132:
#line 564 "perly.y"
    { yyval.opval = newUNOP(OP_NULL, OPf_SPECIAL, scope(yyvsp[0].opval)); ;}
    break;

  case 133:
#line 566 "perly.y"
    { yyval.opval = newUNOP(OP_ENTERSUB,
			    OPf_SPECIAL|OPf_STACKED,
			    prepend_elem(OP_LIST,
				scalar(newCVREF(
				    (OPpENTERSUB_AMPER<<8),
				    scalar(yyvsp[-2].opval)
				)),Nullop)); dep();;}
    break;

  case 134:
#line 574 "perly.y"
    { yyval.opval = newUNOP(OP_ENTERSUB,
			    OPf_SPECIAL|OPf_STACKED,
			    append_elem(OP_LIST,
				yyvsp[-1].opval,
				scalar(newCVREF(
				    (OPpENTERSUB_AMPER<<8),
				    scalar(yyvsp[-3].opval)
				)))); dep();;}
    break;

  case 135:
#line 583 "perly.y"
    { yyval.opval = newUNOP(OP_ENTERSUB, OPf_SPECIAL|OPf_STACKED,
			    prepend_elem(OP_LIST,
				scalar(newCVREF(0,scalar(yyvsp[-2].opval))), Nullop)); dep();;}
    break;

  case 136:
#line 587 "perly.y"
    { yyval.opval = newUNOP(OP_ENTERSUB, OPf_SPECIAL|OPf_STACKED,
			    prepend_elem(OP_LIST,
				yyvsp[-1].opval,
				scalar(newCVREF(0,scalar(yyvsp[-3].opval))))); dep();;}
    break;

  case 141:
#line 599 "perly.y"
    { yyval.opval = newCONDOP(0, yyvsp[-4].opval, yyvsp[-2].opval, yyvsp[0].opval); ;}
    break;

  case 142:
#line 601 "perly.y"
    { yyval.opval = newUNOP(OP_REFGEN, 0, mod(yyvsp[0].opval,OP_REFGEN)); ;}
    break;

  case 143:
#line 603 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 144:
#line 605 "perly.y"
    { yyval.opval = localize(yyvsp[0].opval,yyvsp[-1].ival); ;}
    break;

  case 145:
#line 607 "perly.y"
    { yyval.opval = sawparens(yyvsp[-1].opval); ;}
    break;

  case 146:
#line 609 "perly.y"
    { yyval.opval = sawparens(newNULLLIST()); ;}
    break;

  case 147:
#line 611 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 148:
#line 613 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 149:
#line 615 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 150:
#line 617 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 151:
#line 619 "perly.y"
    { yyval.opval = newUNOP(OP_AV2ARYLEN, 0, ref(yyvsp[0].opval, OP_AV2ARYLEN));;}
    break;

  case 152:
#line 621 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 153:
#line 623 "perly.y"
    { yyval.opval = newSLICEOP(0, yyvsp[-1].opval, yyvsp[-4].opval); ;}
    break;

  case 154:
#line 625 "perly.y"
    { yyval.opval = newSLICEOP(0, yyvsp[-1].opval, Nullop); ;}
    break;

  case 155:
#line 627 "perly.y"
    { yyval.opval = prepend_elem(OP_ASLICE,
				newOP(OP_PUSHMARK, 0),
				    newLISTOP(OP_ASLICE, 0,
					list(yyvsp[-1].opval),
					ref(yyvsp[-3].opval, OP_ASLICE))); ;}
    break;

  case 156:
#line 633 "perly.y"
    { yyval.opval = prepend_elem(OP_HSLICE,
				newOP(OP_PUSHMARK, 0),
				    newLISTOP(OP_HSLICE, 0,
					list(yyvsp[-2].opval),
					ref(oopsHV(yyvsp[-4].opval), OP_HSLICE)));
			    PL_expect = XOPERATOR; ;}
    break;

  case 157:
#line 640 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 158:
#line 642 "perly.y"
    { yyval.opval = newUNOP(OP_ENTERSUB, 0, scalar(yyvsp[0].opval)); ;}
    break;

  case 159:
#line 644 "perly.y"
    { yyval.opval = newUNOP(OP_ENTERSUB, OPf_STACKED, scalar(yyvsp[-2].opval)); ;}
    break;

  case 160:
#line 646 "perly.y"
    { yyval.opval = newUNOP(OP_ENTERSUB, OPf_STACKED,
			    append_elem(OP_LIST, yyvsp[-1].opval, scalar(yyvsp[-3].opval))); ;}
    break;

  case 161:
#line 649 "perly.y"
    { yyval.opval = newUNOP(OP_ENTERSUB, OPf_STACKED,
			    append_elem(OP_LIST, yyvsp[0].opval, scalar(yyvsp[-1].opval))); ;}
    break;

  case 162:
#line 652 "perly.y"
    { yyval.opval = newOP(yyvsp[0].ival, OPf_SPECIAL);
			    PL_hints |= HINT_BLOCK_SCOPE; ;}
    break;

  case 163:
#line 655 "perly.y"
    { yyval.opval = newLOOPEX(yyvsp[-1].ival,yyvsp[0].opval); ;}
    break;

  case 164:
#line 657 "perly.y"
    { yyval.opval = newUNOP(OP_NOT, 0, scalar(yyvsp[0].opval)); ;}
    break;

  case 165:
#line 659 "perly.y"
    { yyval.opval = newOP(yyvsp[0].ival, 0); ;}
    break;

  case 166:
#line 661 "perly.y"
    { yyval.opval = newUNOP(yyvsp[-1].ival, 0, yyvsp[0].opval); ;}
    break;

  case 167:
#line 663 "perly.y"
    { yyval.opval = newUNOP(yyvsp[-1].ival, 0, yyvsp[0].opval); ;}
    break;

  case 168:
#line 665 "perly.y"
    { yyval.opval = newUNOP(OP_ENTERSUB, OPf_STACKED,
			    append_elem(OP_LIST, yyvsp[0].opval, scalar(yyvsp[-1].opval))); ;}
    break;

  case 169:
#line 668 "perly.y"
    { yyval.opval = newOP(yyvsp[0].ival, 0); ;}
    break;

  case 170:
#line 670 "perly.y"
    { yyval.opval = newOP(yyvsp[-2].ival, 0); ;}
    break;

  case 171:
#line 672 "perly.y"
    { yyval.opval = newUNOP(OP_ENTERSUB, OPf_STACKED,
				scalar(yyvsp[0].opval)); ;}
    break;

  case 172:
#line 675 "perly.y"
    { yyval.opval = newOP(yyvsp[-2].ival, OPf_SPECIAL); ;}
    break;

  case 173:
#line 677 "perly.y"
    { yyval.opval = newUNOP(yyvsp[-3].ival, 0, yyvsp[-1].opval); ;}
    break;

  case 174:
#line 679 "perly.y"
    { yyval.opval = pmruntime(yyvsp[-3].opval, yyvsp[-1].opval, Nullop); ;}
    break;

  case 175:
#line 681 "perly.y"
    { yyval.opval = pmruntime(yyvsp[-5].opval, yyvsp[-3].opval, yyvsp[-1].opval); ;}
    break;

  case 178:
#line 688 "perly.y"
    { yyval.opval = my_attrs(yyvsp[-1].opval,yyvsp[0].opval); ;}
    break;

  case 179:
#line 690 "perly.y"
    { yyval.opval = localize(yyvsp[0].opval,yyvsp[-1].ival); ;}
    break;

  case 180:
#line 695 "perly.y"
    { yyval.opval = sawparens(yyvsp[-1].opval); ;}
    break;

  case 181:
#line 697 "perly.y"
    { yyval.opval = sawparens(newNULLLIST()); ;}
    break;

  case 182:
#line 699 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 183:
#line 701 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 184:
#line 703 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 185:
#line 708 "perly.y"
    { yyval.opval = Nullop; ;}
    break;

  case 186:
#line 710 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 187:
#line 714 "perly.y"
    { yyval.opval = Nullop; ;}
    break;

  case 188:
#line 716 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;

  case 189:
#line 718 "perly.y"
    { yyval.opval = yyvsp[-1].opval; ;}
    break;

  case 190:
#line 724 "perly.y"
    { PL_in_my = 0; yyval.opval = my(yyvsp[0].opval); ;}
    break;

  case 191:
#line 728 "perly.y"
    { yyval.opval = newCVREF(yyvsp[-1].ival,yyvsp[0].opval); ;}
    break;

  case 192:
#line 732 "perly.y"
    { yyval.opval = newSVREF(yyvsp[0].opval); ;}
    break;

  case 193:
#line 736 "perly.y"
    { yyval.opval = newAVREF(yyvsp[0].opval); ;}
    break;

  case 194:
#line 740 "perly.y"
    { yyval.opval = newHVREF(yyvsp[0].opval); ;}
    break;

  case 195:
#line 744 "perly.y"
    { yyval.opval = newAVREF(yyvsp[0].opval); ;}
    break;

  case 196:
#line 748 "perly.y"
    { yyval.opval = newGVREF(0,yyvsp[0].opval); ;}
    break;

  case 197:
#line 753 "perly.y"
    { yyval.opval = scalar(yyvsp[0].opval); ;}
    break;

  case 198:
#line 755 "perly.y"
    { yyval.opval = scalar(yyvsp[0].opval);  ;}
    break;

  case 199:
#line 757 "perly.y"
    { yyval.opval = scope(yyvsp[0].opval); ;}
    break;

  case 200:
#line 760 "perly.y"
    { yyval.opval = yyvsp[0].opval; ;}
    break;


    
