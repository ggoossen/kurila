If you read this file _as_is_, just ignore the funny characters you
see. It is written in the POD format (see pod/perlpod.pod) which is
specially designed to be readable as is.

=head1 NAME

README.epoc - Perl for EPOC

=head1 SYNOPSIS

Perl 5 README file for the EPOC operating system.

=head1 INTRODUCTION

EPOC is a OS for palmtops and mobile phones. For more informations look at:
http://www.symbian.com/

This is a port of perl to EPOC. It runs on the Psion Series 5, 5mx,
5mx Pro, Psion Revo and on the Ericson M128. I have no report about
the Psion Netbook or the S7. For information about this hardware
please refer to http://www.psion.com.

=head1 INSTALLING PERL ON EPOC

You will need ~4MB free space in order to install and run perl.

Install perl.sis on the EPOC machine (most likely a PSION Series 5,
5mx). If you do not know how to do that, you are on your own. 

Perl itself and its standard library are using 2.5 MB disk space. I
left out unicode support modules and modules which will not work with
this version. (For details look into epoc/createpkg.pl). If you like
to use them, you are free to copy them from a current perl release.

Get ESHELL from symbian: 
http://developer.epocworld.com/downloads/progs/Eshell.zip

Now you can enter: perl -de 0 in order to run the perl debugger. If
you are leaving perl, you get into the system screen. You have to
switch back manually to ESHELL. When perl is running, you will see
a task with the name STDOUT in the task list.

=head1 USING PERL ON EPOC

=head2 IO Redirection

You can redirect the output with the UNIX bourne shell syntax (this is
built into perl rather then eshell) For instance the following command
line will run the script test.pl with the output redirected to
stdout_file, the errors to stderr_file and input from stdin_file.

perl test.pl >stdout_file <stdin_file 2>stderr_file

Alternatively you can use 2>&1 in order to add the standard error
output to stdout.

=head2 PATH Names

ESHELL looks for executables in ?:/System/Programs. The SIS file
installs perl in this special folder directory. The default drive and
path are the same as folder the executable resides. The EPOC
filesystem is case-preserving, not case-sensitive.

EPOC uses the ?: syntax for establishing a search order: First in C: (RAM),
then on D: (CF Card) and last in Z: (ROM).

The perl @INC search path is now implemented with '?:'. Your perl
executable can now live on a different drive than the perl library or
even your scripts.

ESHELL paths have to be written with backslashes '\', file arguments
to perl with slashes '/'. Remember that I/O redirection is done
internally in perl, so please use slashes for redirects.

perl.exe C:/test.pl >C:/output.txt

You can automatically search for file on all EPOC drives with a ? as
the driver letter. For instance ?:\a.txt searches for C:\a.txt,
D:\b.txt (and Z:\a.txt).

=head2 Editors

A suitable text-editor can be downloaded 
from symbian http://developer.epocworld.com/downloads/progs/Editor.zip

=head2 Features

The built-in function EPOC::getcwd returns the current directory.

=head2 Restrictions

Features are left out, because of restrictions of the POSIX support in
EPOC:

=over 4

=item *

backquoting, pipes etc.

=item *

system() does not inherit ressources like: file descriptors,
environment etc.

=item *

signal, kill, alarm. Do not try to use them. This may be
impossible to implement on EPOC.

=item *

select is missing.

=item *

binmode does not exist. (No CR LF to LF translation for text files)

=item *

EPOC does not handle the notion of current drive and current
directory very well (i.e. not at all, but it tries hard to emulate
one) See PATH.

=item *

You need the shell eshell.exe in order to run perl.exe and supply
it with arguments.

=item *

Heap is limited to 4MB.

=back

=head2 Compiling Perl 5 on the EPOC cross compiling environment

Sorry, this is far too short.

=over 4

=item *

You will need the C++ SDK from http://developer.epocworld.com/. 

=item *

You will need to set up the cross SDK from 
http://members.linuxstart.com/~oflebbe

=item *

You may have to adjust config.sh (cc, cppflags) for your epoc 
install location.

=item *

You may have to adjust config.sh for your cross SDK location

=item *

Get the Perl sources from your nearest CPAN site.

=item *

Unpack the sources. 

=item *

Build a native perl from this sources... 

      cp epoc/* .
      ./Configure -S
      make perl.a
      cp miniperl.native miniperl
      make perl
      make ext/Errno/pm_to_blib 
      perl link.pl perlmain.o lib/auto/DynaLoader/DynaLoader.a \
         lib/auto/Data/Dumper/Dumper.a \
         lib/auto/File/Glob/Glob.a lib/auto/IO/IO.a \
         lib/auto/Socket/Socket.a \
         lib/auto/Fcntl/Fcntl.a lib/auto/Sys/Hostname/Hostname.a \
	perl.a `cat ext.libs`
      perl createpkg.pl 

      wine G:/bin/makesis perl.pkg perl.sis

=back

=head1 SUPPORT STATUS

I'm offering this port "as is". You can ask me questions, but I can't
guarantee I'll be able to answer them.

=head1 AUTHOR

Olaf Flebbe <o.flebbe@gmx.de>
http://members.linuxstart.com/~oflebbe/perl/perl5.html

=head1 LAST UPDATE

2000-09-18

=cut
