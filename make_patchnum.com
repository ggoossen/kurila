$! MAKE_PATCHNUM.COM
$!
$ open/read pf .patch
$ read pf line_in
$ close pf
$ line_in = f$edit(line_in, "TRIM,COMPRESS")
$ branch = f$element(0, " ", line_in)
$ snapshot_created = f$element(1, " ", line_in)
$ commit_id = f$element(2, " ", line_in)
$ describe = f$element(3, " ", line_in)
$!
$ changed=""
$ extra_info="git_snapshot_date='" + snapshot_created + "'"
$ commit_title="Snapshot of:"
$!
$ write sys$output "Updating .patchnum and lib/Config_git.pl"
$!
$ create .patchnum
$ open/append pn .patchnum
$ write pn "describe: ''describe'"
$ close pn
$!
$ create unpushed.h
$ open/append unp unpushed.h
$ write unp "/**********************************************************************"
$ write unp "* WARNING: unpushed.h is automatically generated by make_patchnum.com *"
$ write unp "*          DO NOT EDIT DIRECTLY - edit make_patchnum.com instead      *"
$ write unp "**********************************************************************/"
$ write unp "#define PERL_GIT_UNPUSHED_COMMITS       /*no-op*/"
$ write unp "/*leave-this-comment*/"
$ close unp
$!
$ create [.lib]Config_git.pl
$ open/append cfg [.lib]Config_git.pl
$ write cfg "##################################################################"
$ write cfg "# WARNING: lib/Config_git.pl is generated by make_patchnum.com   #"
$ write cfg "#          DO NOT EDIT DIRECTLY - edit make_patchnum.com instead #"
$ write cfg "##################################################################"
$ write cfg "$Config::Git_Data=<<'ENDOFGIT';"
$ write cfg "git_commit_id='" + commit_id + "'"
$ write cfg "git_describe='" + describe + "'"
$ write cfg "git_branch='" + branch + "'"
$ write cfg "git_uncommitted_changes='" + changed + "'"
$ write cfg "git_commit_id_title='" + commit_title + "'"
$ write cfg "''extra_info'"
$ write cfg "ENDOFGIT"
$ close cfg
$ exit
