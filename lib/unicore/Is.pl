# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!! 
# This file is built by ./mktables from e.g. Unicode.txt.
# Any changes made here will be lost!

##
## Data in this file used by ../utf8_heavy.pl
##

## Mapping from name to filename in ./Is
%utf8::Is = (
  'ASCII'                                   => 'ASCII',
  'Alnum'                                   => 'Alnum',
  'Alpha'                                   => 'Alpha',
  'BidiAL'                                  => 'BidiAL',
  'BidiAN'                                  => 'BidiAN',
  'BidiB'                                   => 'BidiB',
  'BidiBN'                                  => 'BidiBN',
  'BidiCS'                                  => 'BidiCS',
  'BidiEN'                                  => 'BidiEN',
  'BidiES'                                  => 'BidiES',
  'BidiET'                                  => 'BidiET',
  'BidiL'                                   => 'BidiL',
  'BidiLRE'                                 => 'BidiLRE',
  'BidiLRO'                                 => 'BidiLRO',
  'BidiNSM'                                 => 'BidiNSM',
  'BidiON'                                  => 'BidiON',
  'BidiPDF'                                 => 'BidiPDF',
  'BidiR'                                   => 'BidiR',
  'BidiRLE'                                 => 'BidiRLE',
  'BidiRLO'                                 => 'BidiRLO',
  'BidiS'                                   => 'BidiS',
  'BidiWS'                                  => 'BidiWS',
  'Blank'                                   => 'Blank',
  'C'                                       => 'C',
  'Canon'                                   => 'Canon',
  'Cc'                                      => 'Cc',
  'Cf'                                      => 'Cf',
  'Cn'                                      => 'Cn',
  'Cntrl'                                   => 'Cntrl',
  'Co'                                      => 'Co',
  'Compat'                                  => 'Compat',
  'Cs'                                      => 'Cs',
  'DCcircle'                                => 'DCcircle',
  'DCcompat'                                => 'DCcompat',
  'DCfinal'                                 => 'DCfinal',
  'DCfont'                                  => 'DCfont',
  'DCfraction'                              => 'DCfracti',
  'DCinitial'                               => 'DCinitia',
  'DCisolated'                              => 'DCisolat',
  'DCmedial'                                => 'DCmedial',
  'DCnarrow'                                => 'DCnarrow',
  'DCnoBreak'                               => 'DCnoBrea',
  'DCsmall'                                 => 'DCsmall',
  'DCsquare'                                => 'DCsquare',
  'DCsub'                                   => 'DCsub',
  'DCsuper'                                 => 'DCsuper',
  'DCvertical'                              => 'DCvertic',
  'DCwide'                                  => 'DCwide',
  'Digit'                                   => 'Digit',
  'Graph'                                   => 'Graph',
  'L'                                       => 'L',
  'L&'                                      => 'L_',
  'LbrkAI'                                  => 'LbrkAI',
  'LbrkAL'                                  => 'LbrkAL',
  'LbrkB2'                                  => 'LbrkB2',
  'LbrkBA'                                  => 'LbrkBA',
  'LbrkBB'                                  => 'LbrkBB',
  'LbrkBK'                                  => 'LbrkBK',
  'LbrkCB'                                  => 'LbrkCB',
  'LbrkCL'                                  => 'LbrkCL',
  'LbrkCM'                                  => 'LbrkCM',
  'LbrkCR'                                  => 'LbrkCR',
  'LbrkEX'                                  => 'LbrkEX',
  'LbrkGL'                                  => 'LbrkGL',
  'LbrkHY'                                  => 'LbrkHY',
  'LbrkID'                                  => 'LbrkID',
  'LbrkIN'                                  => 'LbrkIN',
  'LbrkIS'                                  => 'LbrkIS',
  'LbrkLF'                                  => 'LbrkLF',
  'LbrkNS'                                  => 'LbrkNS',
  'LbrkNU'                                  => 'LbrkNU',
  'LbrkOP'                                  => 'LbrkOP',
  'LbrkPO'                                  => 'LbrkPO',
  'LbrkPR'                                  => 'LbrkPR',
  'LbrkQU'                                  => 'LbrkQU',
  'LbrkSA'                                  => 'LbrkSA',
  'LbrkSG'                                  => 'LbrkSG',
  'LbrkSP'                                  => 'LbrkSP',
  'LbrkSY'                                  => 'LbrkSY',
  'LbrkXX'                                  => 'LbrkXX',
  'LbrkZW'                                  => 'LbrkZW',
  'Ll'                                      => 'Ll',
  'Lm'                                      => 'Lm',
  'Lo'                                      => 'Lo',
  'Lower'                                   => 'Lower',
  'Lt'                                      => 'Lt',
  'Lu'                                      => 'Lu',
  'M'                                       => 'M',
  'Mc'                                      => 'Mc',
  'Me'                                      => 'Me',
  'Mirrored'                                => 'Mirrored',
  'Mn'                                      => 'Mn',
  'N'                                       => 'N',
  'Nd'                                      => 'Nd',
  'Nl'                                      => 'Nl',
  'No'                                      => 'No',
  'P'                                       => 'P',
  'Pc'                                      => 'Pc',
  'Pd'                                      => 'Pd',
  'Pe'                                      => 'Pe',
  'Pf'                                      => 'Pf',
  'Pi'                                      => 'Pi',
  'Po'                                      => 'Po',
  'Print'                                   => 'Print',
  'Ps'                                      => 'Ps',
  'Punct'                                   => 'Punct',
  'S'                                       => 'S',
  'Sc'                                      => 'Sc',
  'Sk'                                      => 'Sk',
  'Sm'                                      => 'Sm',
  'So'                                      => 'So',
  'Space'                                   => 'Space',
  'SpacePerl'                               => 'SpacePer',
  'Title'                                   => 'Title',
  'Upper'                                   => 'Upper',
  'Word'                                    => 'Word',
  'XDigit'                                  => 'XDigit',
  'Z'                                       => 'Z',
  'Zl'                                      => 'Zl',
  'Zp'                                      => 'Zp',
  'Zs'                                      => 'Zs',
  '_CanonDCIJ'                              => '_CanonDC',
  '_CaseIgnorable'                          => '_CaseIgn',
  '_CombAbove'                              => '_CombAbo',
);

## Mappings from regex to filename in ./Is/
%utf8::IsPat = (
 'al' => {
	'All' => 'Any',
	'Alphabetic' => 'Alphabet',
 },
 'an' => {
	'Any' => 'Any',
 },
 'ar' => {
	'Armenian' => 'Armenian',
	'Arabic' => 'Arabic',
 },
 'as' => {
	'Ascii(?:[-_]|\s+)?Hex(?:[-_]|\s+)?Digit' => 'AsciiHex',
	'Assigned' => 'Assigned',
 },
 'be' => {
	'Bengali' => 'Bengali',
 },
 'bi' => {
	'Bidi(?:[-_]|\s+)?Control' => 'BidiCont',
 },
 'bo' => {
	'Bopomofo' => 'Bopomofo',
 },
 'ca' => {
	'Canadian(?:[-_]|\s+)?Aboriginal' => 'Canadian',
 },
 'ch' => {
	'Cherokee' => 'Cherokee',
 },
 'cl' => {
	'Close(?:[-_]|\s+)?Punctuation' => 'Pe',
 },
 'co' => {
	'Control' => 'Cc',
	'Common' => 'Common',
	'Connector(?:[-_]|\s+)?Punctuation' => 'Pc',
 },
 'cu' => {
	'Currency(?:[-_]|\s+)?Symbol' => 'Sc',
 },
 'cy' => {
	'Cyrillic' => 'Cyrillic',
 },
 'da' => {
	'Dash(?:[-_]|\s+)?Punctuation' => 'Pd',
	'Dash' => 'Dash',
 },
 'de' => {
	'Deseret' => 'Deseret',
	'Devanagari' => 'Devanaga',
	'Decimal(?:[-_]|\s+)?Number' => 'Nd',
 },
 'di' => {
	'Diacritic' => 'Diacriti',
 },
 'en' => {
	'Enclosing(?:[-_]|\s+)?Mark' => 'Me',
 },
 'et' => {
	'Ethiopic' => 'Ethiopic',
 },
 'ex' => {
	'Extender' => 'Extender',
 },
 'fi' => {
	'Final(?:[-_]|\s+)?Punctuation' => 'Pf',
 },
 'fo' => {
	'Format' => 'Cf',
 },
 'ge' => {
	'Georgian' => 'Georgian',
 },
 'go' => {
	'Gothic' => 'Gothic',
 },
 'gr' => {
	'Greek' => 'Greek',
 },
 'gu' => {
	'Gujarati' => 'Gujarati',
	'Gurmukhi' => 'Gurmukhi',
 },
 'ha' => {
	'Hangul' => 'Hangul',
	'Han' => 'Han',
 },
 'he' => {
	'Hebrew' => 'Hebrew',
	'Hex(?:[-_]|\s+)?Digit' => 'HexDigit',
 },
 'hi' => {
	'Hiragana' => 'Hiragana',
 },
 'hy' => {
	'Hyphen' => 'Hyphen',
 },
 'id' => {
	'Ideographic' => 'Ideograp',
	'Id(?:[-_]|\s+)?Continue' => 'IdContin',
	'Id(?:[-_]|\s+)?Start' => 'IdStart',
 },
 'in' => {
	'Inherited' => 'Inherite',
	'Initial(?:[-_]|\s+)?Punctuation' => 'Pi',
 },
 'jo' => {
	'Join(?:[-_]|\s+)?Control' => 'JoinCont',
 },
 'ka' => {
	'Kannada' => 'Kannada',
	'Katakana' => 'Katakana',
 },
 'kh' => {
	'Khmer' => 'Khmer',
 },
 'la' => {
	'Lao' => 'Lao',
	'Latin' => 'Latin',
 },
 'le' => {
	'Letter(?:[-_]|\s+)?Number' => 'Nl',
	'Letter' => 'L',
 },
 'li' => {
	'Line(?:[-_]|\s+)?Separator' => 'Zl',
 },
 'lo' => {
	'Lowercase' => 'Lowercas',
	'Lowercase(?:[-_]|\s+)?Letter' => 'Ll',
 },
 'ma' => {
	'Math' => 'Math',
	'Malayalam' => 'Malayala',
	'Mark' => 'M',
	'Math(?:[-_]|\s+)?Symbol' => 'Sm',
 },
 'mo' => {
	'Modifier(?:[-_]|\s+)?Symbol' => 'Sk',
	'Mongolian' => 'Mongolia',
	'Modifier(?:[-_]|\s+)?Letter' => 'Lm',
 },
 'my' => {
	'Myanmar' => 'Myanmar',
 },
 'no' => {
	'Noncharacter(?:[-_]|\s+)?Code(?:[-_]|\s+)?Point' => 'Nonchara',
	'Non(?:[-_]|\s+)?Spacing(?:[-_]|\s+)?Mark' => 'Mn',
 },
 'nu' => {
	'Number' => 'N',
 },
 'og' => {
	'Ogham' => 'Ogham',
 },
 'ol' => {
	'Old(?:[-_]|\s+)?Italic' => 'OldItali',
 },
 'op' => {
	'Open(?:[-_]|\s+)?Punctuation' => 'Ps',
 },
 'or' => {
	'Oriya' => 'Oriya',
 },
 'ot' => {
	'Other(?:[-_]|\s+)?Punctuation' => 'Po',
	'Other(?:[-_]|\s+)?Uppercase' => 'OtherUpp',
	'Other(?:[-_]|\s+)?Alphabetic' => 'OtherAlp',
	'Other(?:[-_]|\s+)?Symbol' => 'So',
	'Other(?:[-_]|\s+)?Number' => 'No',
	'Other' => 'C',
	'Other(?:[-_]|\s+)?Math' => 'OtherMat',
	'Other(?:[-_]|\s+)?Letter' => 'Lo',
	'Other(?:[-_]|\s+)?Lowercase' => 'OtherLow',
 },
 'pa' => {
	'Paragraph(?:[-_]|\s+)?Separator' => 'Zp',
 },
 'pr' => {
	'Private(?:[-_]|\s+)?Use' => 'Co',
 },
 'pu' => {
	'Punctuation' => 'P',
 },
 'qu' => {
	'Quotation(?:[-_]|\s+)?Mark' => 'Quotatio',
 },
 'ru' => {
	'Runic' => 'Runic',
 },
 'se' => {
	'Separator' => 'Z',
 },
 'si' => {
	'Sinhala' => 'Sinhala',
 },
 'sp' => {
	'Space(?:[-_]|\s+)?Separator' => 'Zs',
	'Spacing(?:[-_]|\s+)?Mark' => 'Mc',
 },
 'su' => {
	'Surrogate' => 'Cs',
 },
 'sy' => {
	'Syriac' => 'Syriac',
	'Symbol' => 'S',
 },
 'ta' => {
	'Tamil' => 'Tamil',
 },
 'te' => {
	'Telugu' => 'Telugu',
	'Terminal(?:[-_]|\s+)?Punctuation' => 'Terminal',
 },
 'th' => {
	'Thaana' => 'Thaana',
	'Thai' => 'Thai',
 },
 'ti' => {
	'Tibetan' => 'Tibetan',
	'Titlecase(?:[-_]|\s+)?Letter' => 'Lt',
 },
 'un' => {
	'Unassigned' => 'Cn',
 },
 'up' => {
	'Uppercase' => 'Uppercas',
	'Uppercase(?:[-_]|\s+)?Letter' => 'Lu',
 },
 'wh' => {
	'White(?:[-_]|\s+)?Space' => 'WhiteSpa',
 },
 'yi' => {
	'Yi' => 'Yi',
 },
);
