Check existing $^W functionality


__END__

# warnable code, warnings enabled via runtime $^W
$^W = 1 ;
my $b ; chop $b ;
EXPECT
Use of uninitialized value $b in scalar chop at - line 4 character 9.
########

# warnings enabled at compile time, disabled at run time
BEGIN { $^W = 1 }
$^W = 0 ;
my $b ; chop $b ;
EXPECT

########

# warnings disabled at compile time, enabled at run time
BEGIN { $^W = 0 }
$^W = 1 ;
my $b ; chop $b ;
EXPECT
Use of uninitialized value $b in scalar chop at - line 5 character 9.
########
-w
--FILE-- abcd
my $b ; chop $b ;
1 ;
--FILE-- 
require "./abcd";
EXPECT
Use of uninitialized value $b in scalar chop at ./abcd line 1 character 9.
    (require) called at - line 1 character 1.
########

--FILE-- abcd
my $b ; chop $b ;
1 ;
--FILE-- 
#! perl -w
require "./abcd";
EXPECT
########

--FILE-- abcd
my $b ; chop $b ;
1 ;
--FILE-- 
$^W =1 ;
require "./abcd";
EXPECT
Use of uninitialized value $b in scalar chop at ./abcd line 1 character 9.
    (require) called at - line 2 character 1.
########

--FILE-- abcd
$^W = 0;
my $b ; chop $b ;
1 ;
--FILE-- 
$^W =1 ;
require "./abcd";
EXPECT

########

--FILE-- abcd
$^W = 1;
1 ;
--FILE-- 
$^W =0 ;
require "./abcd";
my $b ; chop $b ;
EXPECT
Use of uninitialized value $b in scalar chop at - line 3 character 9.
########

$^W = 1;
eval 'my $b ; chop $b ;' ;
print $@ ;
EXPECT
Use of uninitialized value $b in scalar chop at (eval 1) line 1 character 9.
    (eval) called at - line 3 character 1.
########

eval '$^W = 1;' ;
print $@ ;
my $b ; chop $b ;
EXPECT
Use of uninitialized value $b in scalar chop at - line 4 character 9.
########

try {$^W = 1;} ;
print $@ ;
my $b ; chop $b ;
EXPECT
Use of uninitialized value $b in scalar chop at - line 4 character 9.
########

do {
    local ($^W) = 1;
};
my $b ; chop $b ;
EXPECT

########

my $a ; chop $a ;
do {
    local ($^W) = 1;
    my $b ; chop $b ;
};
my $c ; chop $c ;
EXPECT
Use of uninitialized value $b in scalar chop at - line 5 character 13.
########
-w
-e undef
EXPECT
Use of uninitialized value in -e at - line 2 character 2.
########

$^W = 1 + 2 ;
EXPECT

########

$^W = $a ;
EXPECT

########

sub fred {}
$^W = fred() ;
EXPECT

########

sub fred { my $b ; chop $b ;}
do { local $^W = 0 ;
  fred() ;
};
EXPECT

########

sub fred { my $b ; chop $b ;}
do { local $^W = 1 ;
  fred() ;
};
EXPECT
Use of uninitialized value $b in scalar chop at - line 2 character 20.
    main::fred called at - line 4 character 3.
########
