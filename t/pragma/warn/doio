  doio.c	AOK

  Can't do bidirectional pipe
    open(F, "| true |");

  Missing command in piped open
    open(F, "| ");

  Missing command in piped open
    open(F, " |");

  warn(warn_nl, "open");
    open(F, "true\ncd")

  Close on unopened file <%s>
    $a = "fred";close($a)

  tell() on unopened file
    $a = "fred";$a = tell($a)

  seek() on unopened file
    $a = "fred";$a = seek($a,1,1)

  sysseek() on unopened file
    $a = "fred";$a = seek($a,1,1)

  warn(warn_uninit);
    print $a ;

  Stat on unopened file <%s> 
    close STDIN ; -x STDIN ;

  warn(warn_nl, "stat");
    stat "ab\ncd"

  warn(warn_nl, "lstat");
    lstat "ab\ncd"

  Can't exec \"%s\": %s 

  Can't exec \"%s\": %s 


  Mandatory Warnings ALL TODO
  ------------------
  Can't do inplace edit: %s is not a regular file
     edit a directory

  Can't do inplace edit: %s would not be unique
  Can't rename %s to %s: %s, skipping file
  Can't rename %s to %s: %s, skipping file
  Can't remove %s: %s, skipping file
  Can't do inplace edit on %s: %s
  

__END__
# doio.c
use warnings 'io' ;
open(F, '|'.($^O eq 'VMS' ? 'mcr ':'')."$^X -e 1|");
close(F);
no warnings 'io' ;
open(G, '|'.($^O eq 'VMS' ? 'mcr ':'')."$^X -e 1|");
close(G);
EXPECT
Can't do bidirectional pipe at - line 3.
########
# doio.c
use warnings 'io' ;
open(F, "|      ");
no warnings 'io' ;
open(G, "|      ");
EXPECT
Missing command in piped open at - line 3.
########
# doio.c
use warnings 'io' ;
open(F, "      |");
no warnings 'io' ;
open(G, "      |");
EXPECT
Missing command in piped open at - line 3.
########
# doio.c
use warnings 'io' ;
open(F, "<true\ncd");
no warnings 'io' ;
open(G, "<true\ncd");
EXPECT
Unsuccessful open on filename containing newline at - line 3.
########
# doio.c
use warnings 'io' ;
close STDIN ;
tell(STDIN);
$a = seek(STDIN,1,1);
$a = sysseek(STDIN,1,1);
-x STDIN ;
no warnings 'io' ;
close STDIN ;
tell(STDIN);
$a = seek(STDIN,1,1);
$a = sysseek(STDIN,1,1);
-x STDIN ;
EXPECT
tell() on unopened file at - line 4.
seek() on unopened file at - line 5.
sysseek() on unopened file at - line 6.
Stat on unopened file <STDIN> at - line 7.
########
# doio.c
use warnings 'uninitialized' ;
print $a ;
no warnings 'uninitialized' ;
print $b ;
EXPECT
Use of uninitialized value at - line 3.
########
# doio.c
use warnings 'io' ;

EXPECT

########
# doio.c
use warnings 'io' ;
stat "ab\ncd";
lstat "ab\ncd";
no warnings 'io' ;
stat "ab\ncd";
lstat "ab\ncd";
EXPECT
Unsuccessful stat on filename containing newline at - line 3.
Unsuccessful stat on filename containing newline at - line 4.
########
# doio.c
use warnings 'io' ;
exec "lskdjfalksdjfdjfkls","" ;
no warnings 'io' ;
exec "lskdjfalksdjfdjfkls","" ;
EXPECT
OPTION regex
Can't exec "lskdjfalksdjfdjfkls": .+
########
# doio.c
use warnings 'io' ;
exec "lskdjfalksdjfdjfkls", "abc" ;
no warnings 'io' ;
exec "lskdjfalksdjfdjfkls", "abc" ;
EXPECT
OPTION regex
Can't exec "lskdjfalksdjfdjfkls(:? abc)?": .+
########
# doio.c
$^W = 0 ;
my $filename = "./temp" ;
mkdir $filename, 0777 
  or die "Cannot create directory $filename: $!\n" ;
{
    local (@ARGV) = ($filename) ;
    local ($^I) = "" ;
    my $x = <> ;
}
{
    no warnings 'inplace' ;
    local (@ARGV) = ($filename) ;
    local ($^I) = "" ;
    my $x = <> ;
}
{
    use warnings 'inplace' ;
    local (@ARGV) = ($filename) ;
    local ($^I) = "" ;
    my $x = <> ;
}
rmdir $filename ;
EXPECT
Can't do inplace edit: ./temp is not a regular file at - line 9.
Can't do inplace edit: ./temp is not a regular file at - line 21.

