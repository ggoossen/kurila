                         Storable 0.7
               Copyright (c) 1995-2000, Raphael Manfredi

------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify
    it under the terms of the Artistic License, a copy of which can be
    found with perl.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    Artistic License for more details.
------------------------------------------------------------------------

       *** This is beta software -- use at your own risks ***

+=======================================================================
|                     PLEASE NOTE CAREFULLY
|
|   The serialization format changed between 0.5 and 0.6, and the module
|   is NOT backward compatible.  Think about it when upgrading from a
|   pre-0.5@9 version -- images from versions 0.5@9 could still be read
|   by 0.6, but have not been tested with 0.7.
|
|   The next release (0.8 or 1.0) will DROP support for pre-0.6 format.
|
|   The serialization format changed between 0.6 and 0.7, and the module
|   is fully backward compatible, meaning 0.7 can read binary images from
|   0.6, although it only generates new ones.  If you encounter a situation
|   where  it is not AND can duplicate it via a small test case, please
|   send it to me, along with a patch to fix the problem if you can.
+=======================================================================

The Storable extension brings persistency to your data.

You may recursively store to disk any data structure, no matter how
complex and circular it is, provided it contains only SCALAR, ARRAY,
HASH (possibly tied) and references (possibly blessed) to those items.

At a later stage, or in another program, you may retrieve data from
the stored file and recreate the same hiearchy in memory. If you
had blessed references, the retrieved references are blessed into
the same package, so you must make sure you have access to the
same perl class than the one used to create the relevant objects.

There is also a dclone() routine which performs an optimized mirroring
of any data structure, preserving its topology.

Objects (blessed references) may also redefine the way storage and
retrieval is performed, and/or what deep cloning should do on those
objects.

To compile this extension, run:

    perl Makefile.PL [PERL_SRC=...where you put perl sources...]
    make
    make install

There is an embeded POD manual page in Storable.pm.

Raphael Manfredi <Raphael_Manfredi@pobox.com>

------------------------------------------------------------------------
Thanks to:

    Jarkko Hietaniemi <jhi@iki.fi>
    Ulrich Pfeifer <pfeifer@charly.informatik.uni-dortmund.de>
    Benjamin A. Holzman <bah@ecnvantage.com>
    Andrew Ford <A.Ford@ford-mason.co.uk>
    Gisle Aas <gisle@aas.no>
    Jeff Gresham <gresham_jeffrey@jpmorgan.com>
    Murray Nesbitt <murray@activestate.com>
    Albert N. Micheev <Albert.N.Micheev@f80.n5049.z2.fidonet.org>
    Marc Lehmann <pcg@opengroup.org>

for their contributions.

There is a Japanese translation of this man page available at
http://member.nifty.ne.jp/hippo2000/perltips/storable.htm,
courtesy of Kawai, Takanori <kawai@nippon-rad.co.jp>.
------------------------------------------------------------------------
