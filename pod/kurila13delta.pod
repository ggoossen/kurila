=head1 NAME

kurila13delta - what is new for Perl Kurila 1.3

=head1 DESCRIPTION

This document describes differences between Perl Kurila 0.2 and Perl Kurila 1.3

=head1 Highlights In Kurila 1.3

=over 4

=item *

Dereference of a string will always give an error, even when not "use strict 'refs'"

=item *

The <> operator no longer supports glob patterns, use glob() for that

=item *

Method resolution changed to default C3

=item *

"use strict 'subs'" is default on

=item *

Typed declarations (like C<my Animal $dog>) are no longer possible

=item *

Integrate bleadperl changes

=back

=head1 Core Enhancements

=head2 Dereference of a string will always give an error

Usage of a string to lookup a symbol, like ${"$class\::VERSION"} will always give an error,
regardless of "use strict 'refs'".
You can use C<Symbol::fetch_glob> to do a symbol lookup.
Symbol::fetch_glob returns a reference to a glob, thus to use the glob you need to explicitly dereference it.
For example to get the above ${"$class\::VERSION"} you need C<${*{Symbol::fetch_glob("$class\::VERSION")}}>
Symbol::fetch_glob is defined in the Perl core and does not require a C<use Symbol>.

=head2 The <> operator no longer supports glob patterns.

The <'pattern'> glob operator, has been removed in favour of the "glob"
function.  If you try to use <> with an pattern you get an "Usage of
the <> operator with a glob pattern, use the 'glob' function instead"
compile error.

=head2 Default method resolution changed to C3

The default method resolution is changed to C3, see L<mro> for more information about
the C3 method resolution.

=head2 "use strict 'subs'" is default on

By default "use strict 'subs'" is active. See L<strict> for what this means.

=head2 Typed declarations are no longer possible

Typed declarations like "my Animal::Dog $dog" are no longer allowed.
You get a "Expected variable after declarator" compile error if you try to use it.

=head2 Internal bleadperl changes

bleadperl changes up to 31540 are integrated

=back

=head1 KNOWN BUGS

=head2 Documentation

Documentation has not been updated for many of the changes for kurila.

=head2 Limited platform support

Perl Kurila has only been tested/build for x86_64-linux-gnu-thread-multi platform.

=head1 SEE ALSO

The F<INSTALL> file for how to build Perl Kurila.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=head1 HISTORY

Written by Gerard Goossen <F<gerard@tty.nl>>.

=cut
