=head1 NAME

perldelta - what's new for perl v5.8.0

=head1 DESCRIPTION

This document describes differences between the 5.6 release and this one.

=head1 Core Enhancements

=head1 Modules and Pragmata

=head1 Utility Changes

=head1 Improved Documentation

=head1 Performance enhancements

=head1 Installation and Configuration Improvements

=head2 gcc automatically tried if 'cc' does not seem to be working

In many platforms the vendor-supplied 'cc' is too stripped-down to
build Perl (basically, the 'cc' doesn't do ANSI C).  If this seems
to be the case and the 'cc' does not seem to be the GNU C compiler
'gcc', an automatic attempt is made to find and use 'gcc' instead.

=head1 Platform specific changes

=head2 printf() and sprintf() give two-digit exponent where possible

Perl's printf() and sprintf() use the standard C library sprintf()
function to implement the floating point conversions provided by the
C<%e>, C<%f> and C<%g> formats (and their upper-case counterparts).  C
library sprintf() functions vary in the number of exponent digits that
they produce in scientific notation when the modulus of the exponent
is less than one hundred: most platforms give two digits (for example,
C<1.234e-45>) while others, notably Microsoft's libraries for Windows,
give three (as in C<1.234e-045>).  Previously, Perl's functions
produced results identical to the platform's underlying library
function, resulting in script portability problems.  Now, on all
platforms, only two exponent digits are delivered unless more are
needed.

Note that this change applies only to explicit conversions made by
printf() and sprintf(); implicit conversions still show the same
behavior as the underlying library function:

    print "native: ", 1234567e89, sprintf("; standardized: %e\n", 1234567e89)

outputs

    native: 1.234567e+95; standardized: 1.234567e+95

on most platforms, and

    native: 1.234567e+095; standardized: 1.234567e+95

on the remainder.

=head1 Significant bug fixes

=head1 New or Changed Diagnostics

=over 4

=item (perhaps you forgot to load "%s"?)

(F) This is an educated guess made in conjunction with the message
"Can't locate object method \"%s\" via package \"%s\"".  It often means
that a method requires a package that has not been loaded.

=item Ambiguous range in transliteration operator

(F) You wrote something like C<tr/a-z-0//> which doesn't mean anything at
all.  To include a C<-> character in a transliteration, put it either
first or last.  (In the past, C<tr/a-z-0//> was synonymous with
C<tr/a-y//>, which was probably not what you would have expected.)

=back

=head1 New tests

=head1 Incompatible Changes

=head1 Known Problems

=head1 Obsolete Diagnostics

=head1 Reporting Bugs

If you find what you think is a bug, you might check the
articles recently posted to the comp.lang.perl.misc newsgroup.
There may also be information at http://www.perl.com/perl/, the Perl
Home Page.

If you believe you have an unreported bug, please run the B<perlbug>
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of C<perl -V>, will be sent off to perlbug@perl.com to be
analysed by the Perl porting team.

=head1 SEE ALSO

The F<Changes> file for exhaustive details on what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=head1 HISTORY

Written by Gurusamy Sarathy <F<gsar@activestate.com>>, with many
contributions from The Perl Porters.

Send omissions or corrections to <F<perlbug@perl.com>>.

=cut
