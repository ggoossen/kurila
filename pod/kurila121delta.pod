=head1 NAME

kurila121delta - what is new for Perl Kurila 1.21

=head1 DESCRIPTION

This document describes differences between Perl Kurila 1.20 and Perl Kurila 1.21

=head1 Highlights In Perl Kurila 1.21

Layout based syntax for arrays and hashes. CODE as first order data type.

=head1 Core Enhancements

=head2 Layout based syntax for arrays and hashes using the C<@:> and C<%:> operators

Layout can be used to make arrays and hashes.
See L<kurilasyn/"Layout"> for a description of how it works.

=head3 Rationale

Clean and easy to read (complex) data structures.

=head2 C<&foo> returns a CODE

C<&foo> returns the sub foo, i.e. its type is CODE.
Values with CODEs can be copied, and modified.

=head2 Defined on a subroutine dereference reference must exist 

When doing something like C<< defined *foo->& >> the reference should
exist. To check that a reference is subrefed. Something like *foo->&.

=head2 Subroutine references saved at compile time

Implies that to change the sub to be called after code is compile the sub
should be modified, for example by C<< *foo->& = sub { "new" } >>.

=head3 Rationale

consistent first order data types.

=head2 Operator to call subs C<< <: >>

New operator to call subroutines, using C<< <: >> uses layout syntax.

=head3 Rationale

Call operator with layout syntax. Should replace to call
operator C<< ->( >>.

=head1 KNOWN BUGS

=head2 Documentation

Documentation has not been updated for many of the changes for kurila.

=head2 Limited platform support

Perl Kurila has only been tested/build for x86_64-linux-gnu-thread-multi platform.

=head1 SEE ALSO

The F<INSTALL> file for how to build Perl Kurila.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=head1 HISTORY

Written by Gerard Goossen <F<gerard@tty.nl>>.

=cut

 LocalWords:  lvalues paramter defintion
